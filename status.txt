19：23 编写对拍程序

19：58 发现jalr R1出错 正在调试

21：08 addi 发现错误 加变成了上一个的加号 
21: 50 发现问题 因为find没有保证依赖为 -1 通过naive.data 但array_test1 出错
22.57 修改分支预测错误时 的reset 全部清空

ALU -> EXE 结束 -> 发还给ROB修改 ready = false->true
同时 issue进 新指令也需要 这个 ROB的指令 他就会一直保持这个依赖

本质是 访问依赖的时刻 恰好取消依赖，导致

1:13
解决 w 存一下 )
访问依赖：issue 加进 rs1(qj) :  rs,lsb 
解除依赖：rob.value更新 -> 更新 rs, lsb 


1:41
commit 更新 register 值为 -1 和 访问register

解决 解除依赖和添加依赖的冲突

发现时 解除依赖和更新rd 两个同时写怎么办？
我要的值肯定是依赖，而不去更新值 那么我需要一个标记:指示我不能更新依赖为-1

solution: 调换顺序 改成-1后再改成其他东西

1:55

最后JALR 更新的时候不会更新依赖 :前面是LW 等和ALU不同
R10 = R10 + 1
R10 = R10 + 1

2:14 发现lsb load结束和rs还是有竞争关系，因此可以让lsb观望rs是否发出 如果发出就不干扰，否则若自身可执行就执行

3:12 LW出错。。。 LBU unsigned注意了


9:15 最终解决：unsigned和int 导致执行出错。

8.3 2:29:
发现无法乱序执行，需要重新修改，这两天着手搞定+多发射+高维分支预测

